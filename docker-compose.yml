version: '3.7'
services:

  registry:
    build:
      context: ./registry
    image: fp-registry:latest
    hostname: registry

    expose:
      - "8761"
    networks:
      services-network-01:
        aliases:
          - registry
    healthcheck:
      test: "curl --fail --silent registry:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  PostgreSQL:
    image: postgres
    ports:
      - "5432:5432"
    networks:
      services-network-01:
        aliases:
          - PostgreSQL
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ordersystem-service:
    build:
      context: ./ordersystem
    image: fp-ordersystem-service:latest
    hostname: ordersystem-service
    expose:
      - "8762"
    networks:
      services-network-01:
        aliases:
          - ordersystem-service
    depends_on:
      registry:
        condition: service_healthy
      PostgreSQL:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: "curl --fail --silent registry:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  store-service:
    build:
      context: ./store
    image: fp-store-service:latest
    hostname: store-service
    expose:
      - "8763"
    networks:
      services-network-01:
        aliases:
          - store-service
    depends_on:
      registry:
        condition: service_healthy
      PostgreSQL:
        condition: service_healthy
      ordersystem-service:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    healthcheck:
      test: "curl --fail --silent registry:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  raporting-service:
    build:
      context: ./raporting
    image: fp-raporting-service:latest
    hostname: raporting-service
    expose:
      - "8764"
    networks:
      services-network-01:
        aliases:
          - raporting-service
    depends_on:
      registry:
        condition: service_healthy
      PostgreSQL:
        condition: service_healthy
      ordersystem-service:
       condition: service_healthy
      store-service:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
    healthcheck:
      test: "curl --fail --silent registry:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  gateway:
    build:
      context: ./gateway
    image: fp-gateway:latest
    hostname: gateway
    ports:
      - "8760:8760"
    networks:
      services-network-01:
        aliases:
          - gateway
    depends_on:
      - ordersystem-service
      - store-service
      - raporting-service
      - registry
    healthcheck:
      test: "curl --fail --silent registry:8761/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

networks:
  services-network-01:
    name: services-network-01
    driver: bridge
